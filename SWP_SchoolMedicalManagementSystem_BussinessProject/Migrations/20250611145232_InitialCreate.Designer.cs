// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWP_SchoolMedicalManagementSystem_BussinessOject.Context;

#nullable disable

namespace SWP_SchoolMedicalManagementSystem_BussinessOject.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250611145232_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthCheckupCampaignUser", b =>
                {
                    b.Property<Guid>("HealthCheckupCampaignsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicalStaffsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HealthCheckupCampaignsId", "MedicalStaffsId");

                    b.HasIndex("MedicalStaffsId");

                    b.ToTable("HealthCheckupCampaignUser");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupCampaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HealthCheckupCampaigns");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupConsentForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ConsentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ConsentStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HealthCheckupCampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonForDecline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HealthCheckupCampaignId");

                    b.HasIndex("StudentId");

                    b.ToTable("HealthCheckupConsentForms");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupResults", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbnormalSigns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("BloodPressureDia")
                        .HasColumnType("real");

                    b.Property<float?>("BloodPressureSys")
                        .HasColumnType("real");

                    b.Property<DateTime>("CheckupDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DentalCheckupResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HealthCheckupScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HearingLeftResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HearingRightResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("HeartRate")
                        .HasColumnType("real");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<string>("OtherResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ParentResultNotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ParentResultNotified")
                        .HasColumnType("bit");

                    b.Property<string>("Recommendations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionLeftResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionRightResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("HealthCheckupScheduleId");

                    b.ToTable("HealthCheckupResults");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Allergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicDiseases")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HearingLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HearingRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastMedicalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccinationHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionRight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("HealthRecords");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalConsultation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConsultationNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MedicalStaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalStaffId");

                    b.HasIndex("ResultId");

                    b.HasIndex("StudentId");

                    b.ToTable("MedicalConsultations");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalIncident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionsTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IncidentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncidentType")
                        .HasColumnType("int");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ParentNotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ParentNotified")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("MedicalIncidents");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalSupplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplyType")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicalSuppliers");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalSupplyUsage", b =>
                {
                    b.Property<Guid>("SupplyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IncidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<DateTime>("UsageDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SupplyId", "IncidentId");

                    b.HasIndex("IncidentId");

                    b.ToTable("MedicalSupplyUsages");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicationRequests", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MedicalStaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MedicalStaffNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalStaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("MedicationRequests");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicineDiary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("MedicineDiaries");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.StudentHealthCheckupSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HealthCheckupCampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HealthCheckupCampaignId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentHealthCheckupSchedules");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.StudentVaccinationSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VaccinationCampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("VaccinationCampaignId");

                    b.ToTable("StudentVaccinationSchedules");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationCampaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccineType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VaccinationCampaigns");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationConsentForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ConsentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ConsentStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForDecline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VaccinationCampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("VaccinationCampaignId");

                    b.ToTable("VaccinationConsentForms");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationResults", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosageGiven")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SideEffects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VaccinationScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VaccinationScheduleId");

                    b.ToTable("VaccinationResults");
                });

            modelBuilder.Entity("UserVaccinationCampaign", b =>
                {
                    b.Property<Guid>("MedicalStaffsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VaccinationCampaignsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MedicalStaffsId", "VaccinationCampaignsId");

                    b.HasIndex("VaccinationCampaignsId");

                    b.ToTable("UserVaccinationCampaign");
                });

            modelBuilder.Entity("HealthCheckupCampaignUser", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupCampaign", null)
                        .WithMany()
                        .HasForeignKey("HealthCheckupCampaignsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("MedicalStaffsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Blog", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupConsentForm", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupCampaign", "HealthCheckupCampaign")
                        .WithMany()
                        .HasForeignKey("HealthCheckupCampaignId");

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("CheckupConsentForms")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HealthCheckupCampaign");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupResults", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.StudentHealthCheckupSchedule", "HealthCheckupSchedule")
                        .WithMany()
                        .HasForeignKey("HealthCheckupScheduleId");

                    b.Navigation("HealthCheckupSchedule");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthRecord", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithOne("HealthRecord")
                        .HasForeignKey("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthRecord", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalConsultation", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", "MedicalStaff")
                        .WithMany("MedicalConsultations")
                        .HasForeignKey("MedicalStaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupResults", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("MedicalConsultations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MedicalStaff");

                    b.Navigation("Result");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalIncident", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("MedicalIncidents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalSupplyUsage", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalIncident", "Incident")
                        .WithMany("MedicalSupplyUsages")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalSupplier", "MedicalSupply")
                        .WithMany("MedicalSupplyUsages")
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Incident");

                    b.Navigation("MedicalSupply");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicationRequests", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", "MedicalStaff")
                        .WithMany("MedicationRequests")
                        .HasForeignKey("MedicalStaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("MedicationRequests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MedicalStaff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicineDiary", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("MedicineDiaries")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.StudentHealthCheckupSchedule", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupCampaign", "HealthCheckupCampaign")
                        .WithMany("Schedules")
                        .HasForeignKey("HealthCheckupCampaignId");

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("HealthCheckupSchedules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HealthCheckupCampaign");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.StudentVaccinationSchedule", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("VaccinationSchedules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationCampaign", "VaccinationCampaign")
                        .WithMany("Schedules")
                        .HasForeignKey("VaccinationCampaignId");

                    b.Navigation("Student");

                    b.Navigation("VaccinationCampaign");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationConsentForm", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", "Student")
                        .WithMany("VaccinationConsentForms")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationCampaign", "VaccinationCampaign")
                        .WithMany()
                        .HasForeignKey("VaccinationCampaignId");

                    b.Navigation("Student");

                    b.Navigation("VaccinationCampaign");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationResults", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.StudentVaccinationSchedule", "VaccinationSchedule")
                        .WithMany()
                        .HasForeignKey("VaccinationScheduleId");

                    b.Navigation("VaccinationSchedule");
                });

            modelBuilder.Entity("UserVaccinationCampaign", b =>
                {
                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("MedicalStaffsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationCampaign", null)
                        .WithMany()
                        .HasForeignKey("VaccinationCampaignsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.HealthCheckupCampaign", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalIncident", b =>
                {
                    b.Navigation("MedicalSupplyUsages");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.MedicalSupplier", b =>
                {
                    b.Navigation("MedicalSupplyUsages");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.Student", b =>
                {
                    b.Navigation("CheckupConsentForms");

                    b.Navigation("HealthCheckupSchedules");

                    b.Navigation("HealthRecord");

                    b.Navigation("MedicalConsultations");

                    b.Navigation("MedicalIncidents");

                    b.Navigation("MedicationRequests");

                    b.Navigation("MedicineDiaries");

                    b.Navigation("VaccinationConsentForms");

                    b.Navigation("VaccinationSchedules");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("MedicalConsultations");

                    b.Navigation("MedicationRequests");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("SWP_SchoolMedicalManagementSystem_BussinessOject.Entity.VaccinationCampaign", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
